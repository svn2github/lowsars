#!/bin/bash
# Note: this can only work on OSes very similar to mine.

check(){
   echo -n "checking for $1..."
   a=`which $1`
   if [ "$a" != "" ]; then
      echo $a
   else
      echo "no"
      [ "$2" = "" ]&&{
         echo "$1 not found. Please install it."
         exit 1
      }
      [ "$2" = "rec" ]&&{
         echo "$1 not found. $1 is needed to $3. Recommended to install it."
      }
   fi
}
check bash
check mv
check cp
check ls
check echo
check cat
check sleep
check basename
check dirname
check bc
check wc
check tee
check gettext
check msgfmt
check sort
#check msgmerge
check fpc rec "compile FreePascal programs"
check gcc rec "compile C programs"
check g++ rec "compile C++ programs"
check xsltproc rec "translate the Cena config file to Lowsars style"
shfiles=
shfiles[1]="lowsars"
shfiles[2]="lowsars-cena"
shfiles[3]="lowsars-test"
libfiles=
libfiles[1]="database.sh"
libfiles[2]="errorcodes-fp"
libfiles[3]="escape.sh"
libfiles[4]="cena.xsl"
docfiles=
docfiles[1]="COPYING"
docfiles[2]="example"
docdir="/usr/share/doc/lowsars"
localepath1=/usr/share/locale
localepath2=LC_MESSAGES
bindir=/usr/bin
libdir=/usr/share/lowsars

rm po/Makefile
echo "# Don't edit this file. Edit Makefile.in instead!" >> po/Makefile
echo -n "shfiles=" >> po/Makefile
for f in ${shfiles[@]}; do
   echo -n " ../$f" >> po/Makefile
done
echo >> po/Makefile
echo "localepath1=$localepath1" >> po/Makefile
echo "localepath2=$localepath2" >> po/Makefile
cat po/Makefile.in >> po/Makefile

rm lib/Makefile
echo "# Don't edit this file. Edit Makefile.in instead!" >> lib/Makefile
echo "libdir=$libdir" >> lib/Makefile
echo "libfiles=${libfiles[@]}" >> lib/Makefile
cat lib/Makefile.in >> lib/Makefile

rm Makefile
echo "# Don't edit this file. Edit Makefile.in instead!" >> Makefile
[ -x /bin/bash_by_lowsars ]||{
    echo "bash2use=/bin/bash" >> Makefile
}
echo "shfiles=${shfiles[@]}" >> Makefile
echo "docfiles=${docfiles[@]}" >> Makefile
echo "docdir=$docdir" >> Makefile
cat Makefile.in >> Makefile

echo "Done. run make now."
