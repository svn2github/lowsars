#!/bin/bash
# Lowsars single point testing. print 'time score msg' in stdout. e.g.'0.5 10 ac'
# Usage: ./lszrs-1p (execut.) (stdinf) (stdoutf) (timelimit) (score) (spejudge)
# files are not copied before, diff is used if spejudge='-'
# credit: chinatslsz@hotmail.com
ttt=tttt
temp=/dev/null #~/soft/lowsars/temp
null=/dev/null
prob=`basename $1` ; exe='qwerty' ; aaa=aaaa
cp $1 ./$exe 1> $null 2> $null
cp $2 ./$prob.in 1> $null 2> $null
rm $aaa $ttt 1> $null 2> $null
( time -p ./$exe & ) 1> $aaa 2> $ttt # this line number is used below!!
sleep ${4}s
sleep 0.1s
pkill -n -x $exe 1> $null 2> $null
echo aaa $2 >> $temp
cat $aaa >> $temp
echo ttt $2 >> $temp
cat $ttt >> $temp
read re r2 < $aaa
if [ "$r2" ] ; then
   echo --- 0 $re $r2 # pas runerror here. dirty!
   exit
fi
read x b y1 y2 y3 < $ttt
if [ "$x" != 'real' ] ; then
  if [ "$y1" = '13:' ] ; then # it's the uglist in the world! See above
    b=9999
  elif [ -z "$x" ] ; then
    b=9988
  else
    if [ $y1 ] ; then
      echo --- 0 RTE: $y3 # c/cpp runerror here. Very dirty!!
    else 
      read re < ./$prob.out # dirty too!
      echo --- 0 RTE:$re $x $b $y1
    fi
    exit
  fi
fi
t=`echo "$b > $4" | bc `
# echo $b $t
if [ $t '=' '1' ] ; then 
  echo --- 0 Time Limit Exceeded.
else
  if [ -x $6 ] ; then
    c=`$6 $2 $3 ./$prob.out $5`
    echo $b $c
  else
    c=w
    diff -q -b ./$prob.out $3 1> $null 2> $null && c=a
    if [ $c '=' 'a' ] ; then 
      echo $b $5 Accepted.
    else 
      if [ -e ./$prob.out ] ; then
         echo $b 0 Wrong Answer.
      else
        echo $b 0 No output file.
      fi
    fi
  fi
fi
